@using WonderDevBlogMVC2024.Services.Interfaces
@using X.PagedList
@using X.PagedList.Mvc.Core
@inject IImageService imageService
@inject ISlugService slugService
@model IPagedList<WonderDevBlogMVC2024.Models.Post>

@{
    ViewData["Title"] = "Blog Post Index";
}

<h1>Blog Posts</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Image
            </th>
            <th>
                Title
            </th>
            <th>
                Abstract
            </th>
           
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @if (item.ImageData != null)
                    {
                        <img src="@imageService.DecodeImage(item.ImageData, item.ImageType!)" class="img-fluid" alt="@(item.Title) Blog Image" style="max-width: 200px;" />
                    }
                    else
                    {
                        <img src="~/img/default_icon.png class="img-fluid" alt="Default Blog Image" style="max-width: 200px;" />
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Abstract)
                </td>
                
                <td>
                    <a asp-action="Edit" asp-route-slug="@item.Slug">Edit</a> |
                    <a asp-action="Details" asp-route-slug="@item.Slug">Details</a> |
                    <a asp-action="Delete" asp-route-slug="@item.Slug"></a>
                </td>
            </tr>
        }
    </tbody>
</table>
<hr />

<div class="row">
    <div class="col h3">
        Page @(Model!.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>

<!-- Pagination controls -->
<div class="row">
    <div class="col">

        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
                 new PagedListRenderOptions
        {
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" }
        });

    </div>
</div>
